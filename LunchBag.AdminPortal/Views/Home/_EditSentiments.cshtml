@model EventSentimentsSettingsViewModel

@using (Html.BeginForm("EditSentiments", "Home", FormMethod.Post, new { id = "formEvent" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.EventId)
    <div class="form-horizontal">
        <!--<div><input class="btn btn-success pull-right btn-sm" type="button" onclick="addElement('#gridSentiments', 'AddSentiment')" value="Add Sentiment" /></div>-->
        <table id="gridSentiments" class="table table-striped">
            <thead>
                <tr>
                    <th scope="col">Sentiment</th>
                    <th>Value</th>
                    <!--<th scope="col">Actions</th>-->
                </tr>
            </thead>
            <tbody>
                @if (Model.EventSentiments != null)
                {
                    @Html.EditorFor(model => model.EventSentiments)
                }
            </tbody>
        </table>
        <div><input type="button" onclick="saveFormUpdate('The sentiments settings were successfully saved.')" value="Save Sentiments Settings" class="btn btn-primary btn-block" /></div>
    </div>
}